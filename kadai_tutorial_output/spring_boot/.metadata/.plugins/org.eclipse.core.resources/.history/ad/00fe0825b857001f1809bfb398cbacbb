package com.example.samuraitravel.event;

import java.util.UUID;

import org.springframework.context.event.EventListener;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Component;

import com.example.samuraitravel.entity.User;
import com.example.samuraitravel.service.VerificationTokenService;

@Component //ListenerクラスのインスタンスがDIコンテナに登録される→＠EventListenerがついたメソッドをSpringBoot側が自動艇に検出し、イベント発生時に実行してくれる
public class SignupEventListener {
	private final VerificationTokenService verificationTokenService;
	private final JavaMailSender javaMailSender;
	
	public SignupEventListener(VerificationTokenService verificationTokenService, JavaMailSender mailSender) {
		this.verificationTokenService = verificationTokenService;
		this.javaMailSender = mailSender;
	}
	
	@EventListener //イベント発生時に時効しためっそ度に対してつけるアノテーション
	private void onSignupEvent(SignupEvent signupEvent) { //SignupEventクラスから土を植えた時にonSignupEventメソッドを呼び出す
		User user = signupEvent.getUser();
		String token = UUID.randomUUID().toString();//トークンを生成
		verificationTokenService.create(user,  token);
		
		String recipientAddress = user.getEmail();
		String subject = "メール認証";
		String confirmationUrl = signupEvent.getRequestUrl() + "/verify?token=" + token;
		String message = "以下のリンクをクリックして会員登録を完了してください";
		
		SimpleMailMessage mailMessage = new SimpleMailMessage();
		mailMessage.setTo(recipientAddress); //送信先のメールアドレスをセットする
		mailMessage.setSubject(subject);     //件名をセットする
		mailMessage.setText(message + "/n" + confirmationUrl); //本文をセットする
		javaMailSender.send(mailMessage);
	}

}
